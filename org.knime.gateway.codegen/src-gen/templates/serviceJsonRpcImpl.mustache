package {{package}};

{{#imports}}
import {{import}};
{{/imports}}

import com.googlecode.jsonrpc4j.JsonRpcMethod;
import com.googlecode.jsonrpc4j.JsonRpcParam;
import com.googlecode.jsonrpc4j.JsonRpcService;

{{#operations}}
import org.knime.gateway.v0.service.{{baseName}}Service;

/**
 * Json rpc annotated class that wraps another service and delegates the method calls. 
 *
 {{>authors}}
 */
@JsonRpcService(value = "{{baseName}}Service")
// AUTO-GENERATED CODE; DO NOT MODIFY
public class {{classname}} implements {{baseName}}Service {

    private final {{baseName}}Service m_service;
    
    public {{classname}}({{baseName}}Service service) {
        m_service = service;
    }

    {{#operation}}
	/**
     * {@inheritDoc}
     */
    @Override
    @JsonRpcMethod(value = "{{nickname}}")
    public {{#returnType}}{{{returnType}}} {{/returnType}}{{^returnType}}void {{/returnType}}{{nickname}}({{#allParams}}{{>serviceQueryParams}}{{>servicePathParamsJsonRpc}}{{>serviceHeaderParamsJsonRpc}}{{>serviceBodyParamsJsonRpc}}{{>serviceFormParamsJsonRpc}}{{^-last}}, {{/-last}}{{/allParams}}) {
        {{#returnType}}return {{/returnType}}m_service.{{nickname}}({{#allParams}}{{paramName}}{{^-last}}, {{/-last}}{{/allParams}});    
    }

    {{/operation}}
}
{{/operations}}