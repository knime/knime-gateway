{
  "availablePortTypes" : {
    "org.knime.core.node.BufferedDataTable" : {
      "color" : "#000000",
      "hasView" : true,
      "kind" : "table",
      "name" : "Table"
    },
    "org.knime.core.node.port.PortObject" : {
      "color" : "#9B9B9B",
      "kind" : "generic",
      "name" : "Generic Port"
    },
    "org.knime.core.node.port.database.DatabaseConnectionPortObject" : {
      "color" : "#FF4B4B",
      "compatibleTypes" : [ "org.knime.core.node.port.database.DatabasePortObject" ],
      "kind" : "other",
      "name" : "Database Connection"
    },
    "org.knime.core.node.port.database.DatabasePortObject" : {
      "color" : "#800000",
      "compatibleTypes" : [ "org.knime.core.node.port.database.DatabaseConnectionPortObject" ],
      "kind" : "other",
      "name" : "Database Query"
    },
    "org.knime.core.node.port.viewproperty.ShapeHandlerPortObject" : {
      "color" : "#1EB9DC",
      "hidden" : true,
      "kind" : "other",
      "name" : "Shape"
    }
  },
  "exampleProjects" : [ {
    "name" : "Read excel file",
    "origin" : {
      "itemId" : "TODO",
      "providerId" : "local",
      "spaceId" : "local"
    },
    "svg" : ""
  }, {
    "name" : "How to do v-lookup",
    "origin" : {
      "itemId" : "TODO",
      "providerId" : "local",
      "spaceId" : "local"
    },
    "svg" : ""
  }, {
    "name" : "Merge excel file",
    "origin" : {
      "itemId" : "TODO",
      "providerId" : "local",
      "spaceId" : "local"
    },
    "svg" : ""
  } ],
  "featureFlags" : {
    "org.knime.ui.feature.embedded_views_and_dialogs" : false
  },
  "openProjects" : [ {
    "activeWorkflow" : {
      "snapshotId" : "PLACEHOLDER_FOR_SNAPSHOT_ID",
      "workflow" : {
        "allowedActions" : {
          "canCancel" : false,
          "canExecute" : true,
          "canRedo" : false,
          "canReset" : true,
          "canUndo" : false
        },
        "connections" : { },
        "dirty" : true,
        "info" : {
          "containerId" : "root",
          "containerType" : "project",
          "name" : "hollow"
        },
        "nodeTemplates" : { },
        "nodes" : {
          "root:1" : {
            "allowedActions" : {
              "canCancel" : false,
              "canCollapse" : "resetRequired",
              "canDelete" : true,
              "canExecute" : false,
              "canExpand" : "resetRequired",
              "canOpenDialog" : true,
              "canReset" : true
            },
            "annotation" : {
              "defaultFontSize" : 11,
              "styleRanges" : [ ],
              "text" : "",
              "textAlign" : "center"
            },
            "id" : "root:1",
            "inPorts" : [ ],
            "kind" : "metanode",
            "name" : "Metanode",
            "outPorts" : [ ],
            "position" : {
              "x" : 109,
              "y" : 133
            },
            "state" : {
              "executionState" : "EXECUTED"
            }
          },
          "root:2" : {
            "allowedActions" : {
              "canCancel" : false,
              "canCollapse" : "true",
              "canDelete" : true,
              "canExecute" : true,
              "canExpand" : "true",
              "canOpenDialog" : true,
              "canReset" : false
            },
            "annotation" : {
              "styleRanges" : [ ],
              "text" : "",
              "textAlign" : "center"
            },
            "id" : "root:2",
            "inPorts" : [ {
              "canRemove" : false,
              "connectedVia" : "[  ]",
              "index" : 0,
              "name" : "Variable Inport",
              "optional" : true,
              "typeId" : "org.knime.core.node.port.flowvariable.FlowVariablePortObject"
            } ],
            "kind" : "component",
            "name" : "Component",
            "outPorts" : [ {
              "canRemove" : false,
              "connectedVia" : "[  ]",
              "index" : 0,
              "name" : "Variable Outport",
              "portObjectVersion" : "PLACEHOLDER_FOR_VERSION",
              "typeId" : "org.knime.core.node.port.flowvariable.FlowVariablePortObject"
            } ],
            "position" : {
              "x" : 234,
              "y" : 133
            },
            "state" : {
              "executionState" : "CONFIGURED"
            }
          }
        },
        "workflowAnnotations" : [ ]
      }
    },
    "name" : "hollow",
    "origin" : {
      "itemId" : "Item ID for testing",
      "providerId" : "Provider ID for testing",
      "spaceId" : "Space ID for testing"
    },
    "projectId" : "the_workflow_project_id"
  } ],
  "suggestedPortTypeIds" : [ "org.knime.core.node.BufferedDataTable", "org.knime.core.node.port.database.DatabaseConnectionPortObject", "org.knime.core.node.port.database.DatabasePortObject", "org.knime.core.node.port.flowvariable.FlowVariablePortObject", "org.knime.core.node.port.PortObject", "org.knime.core.node.workflow.capture.WorkflowPortObject" ]
}